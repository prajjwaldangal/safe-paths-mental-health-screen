{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prajjwaldangal/summer2020/safePaths/safe-paths-mental-health-screen/screens/TabOneScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Touchables = function (_Component) {\n  _inherits(Touchables, _Component);\n\n  var _super = _createSuper(Touchables);\n\n  function Touchables() {\n    _classCallCheck(this, Touchables);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Touchables, [{\n    key: \"_onPressButton\",\n    value: function _onPressButton() {\n      axios.get(\"http://0.0.0.0:5000\").then(function (res) {\n        console.log(res);\n      });\n    }\n  }, {\n    key: \"_onLongPressButton\",\n    value: function _onLongPressButton() {\n      alert('You long-pressed the button!');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this._onPressButton,\n        underlayColor: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, \"Article 1\"))), React.createElement(TouchableOpacity, {\n        onPress: this._onPressButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, \"Article 2\"))));\n    }\n  }]);\n\n  return Touchables;\n}(Component);\n\nexport { Touchables as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 30,\n    alignItems: 'center'\n  },\n  Button: {\n    alignItems: 'center'\n  },\n  buttonTimer: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  button: {\n    marginBottom: 30,\n    width: 260,\n    alignItems: 'center',\n    backgroundColor: '#2196F3'\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/prajjwaldangal/summer2020/safePaths/safe-paths-mental-health-screen/screens/TabOneScreen.tsx"],"names":["React","Component","axios","Touchables","get","then","res","console","log","alert","styles","container","_onPressButton","button","buttonText","StyleSheet","create","paddingTop","alignItems","Button","buttonTimer","flex","flexDirection","marginBottom","width","backgroundColor","textAlign","padding","color"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;IAIqBC,U;;;;;;;;;;;;;qCACF;AACbD,MAAAA,KAAK,CAACE,GAAN,wBACCC,IADD,CACM,UAAAC,GAAG,EAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACf,OAFC;AAGH;;;yCAEoB;AACnBG,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;;;6BAGQ;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKC,cAAhC;AAAgD,QAAA,aAAa,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,EAME,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKF,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CANF,CADF;AAcD;;;;EA3BqCb,S;;SAAnBE,U;AA8BrB,IAAMO,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BC,EAAAA,MAAM,EAAE;AACTD,IAAAA,UAAU,EAAE;AADH,GALuB;AAQ/BE,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,CADK;AACFC,IAAAA,aAAa,EAAE;AADb,GARkB;AAW/BT,EAAAA,MAAM,EAAE;AACNU,IAAAA,YAAY,EAAE,EADR;AAENC,IAAAA,KAAK,EAAE,GAFD;AAGNN,IAAAA,UAAU,EAAE,QAHN;AAINO,IAAAA,eAAe,EAAE;AAJX,GAXuB;AAiB/BX,EAAAA,UAAU,EAAE;AACVY,IAAAA,SAAS,EAAE,QADD;AAEVC,IAAAA,OAAO,EAAE,EAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG;AAjBmB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\n// import * as request from \"request-promise-native\";\nimport axios from 'axios';\nimport { Platform, StyleSheet, Button, Text, TouchableHighlight,\n  TouchableOpacity, TouchableNativeFeedback, TouchableWithoutFeedback, View } from 'react-native';\n\nexport default class Touchables extends Component {\n  _onPressButton() {\n      axios.get(`http://0.0.0.0:5000`)\n      .then(res => {console.log(res);\n    })\n  }\n\n  _onLongPressButton() {\n    alert('You long-pressed the button!')\n  }\n\n\n  render() {\n    return (\n      <View style={styles.container} >\n        <TouchableOpacity onPress={this._onPressButton} underlayColor=\"white\">\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>Article 1</Text>\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={this._onPressButton}>\n          <View style={styles.button}>\n            <Text style={styles.buttonText}>Article 2</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 30,\n    alignItems: 'center'\n  },\n  Button: {\n\talignItems: 'center'\n  }\t ,\n  buttonTimer: {\n    flex: 1, flexDirection: 'row'\n  },\n  button: {\n    marginBottom: 30,\n    width: 260,\n    alignItems: 'center',\n    backgroundColor: '#2196F3'\n  },\n  buttonText: {\n    textAlign: 'center',\n    padding: 20,\n    color: 'white'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}